<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vps | Keen on Art of Tech]]></title>
  <link href="http://tinyxd.me/blog/categories/vps/atom.xml" rel="self"/>
  <link href="http://tinyxd.me/"/>
  <updated>2012-08-30T13:08:58+08:00</updated>
  <id>http://tinyxd.me/</id>
  <author>
    <name><![CDATA[Tiny]]></name>
    <email><![CDATA[admin@tinyxd.me]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VPS安装openVPN]]></title>
    <link href="http://tinyxd.me/blog/2012/08/30/debian-ubuntu-setup-openvpn/"/>
    <updated>2012-08-30T12:24:00+08:00</updated>
    <id>http://tinyxd.me/blog/2012/08/30/debian-ubuntu-setup-openvpn</id>
    <content type="html"><![CDATA[<p>首先，你得有VPS或者独立服务器。 <br/>
因为我的VPS是openVZ的，查资料发现新的openVZ的VPS是支持PPTP的。不过鉴于安全性的考虑我还是使用openVPN。 <br/>
本文后面会介绍在debian 6下面安装openvpn的一些注意事项以及在xp下面安装openVPN。</p>

<h2>使用一键安装包来安装openVPN   </h2>

<p>1.检查你的VPS是否支持Tun/Tap/nat/ppp，登录VPS检查</p>

<pre><code>cat /dev/net/tun
</code></pre>

<p>如果返回 <code>cat: /dev/net/tun: File descriptor in bad state</code> 说明tun是可用的。</p>

<pre><code>iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o venet0 -j MASQUERADE
</code></pre>

<p>如果返回<code>iptables: No chain/target/match by that name</code>说明nat也是可以用的。</p>

<!--more-->


<p>如果返回结果不是以上描述的，那么说明你的VPS服务商默认没有开通。你可以发ticket要求VPS提供商提供这个，我的VPS就没有提供这个，就发了ticket，不过很快就解决了。 <br/>
2.检查服务器的DNS</p>

<pre><code>vi /etc/resolv.conf
</code></pre>

<p>可以使用  <br/>
OpenDNS提供的DNS服务器地址
　　208.67.222.222
　　208.67.220.220
Google提供的DNS服务</p>

<pre><code>8.8.8.8
8.8.4.4
</code></pre>

<p>3.下载John Malkowski的Debian OpenVPN脚本。</p>

<pre><code>wget http://vpsnoc.com/scripts/debian-openvpn.sh
chmod +x debian-openvpn.sh
./debian-openvpn.sh
</code></pre>

<p>连续填写server和client的信息，出现y/n的时候都选择y。 <br/>
然后把生成的<code>keys.tgz</code>下载自本地。</p>

<h2>不使用一键安装包，一步步自己安装</h2>

<p>以下内容参考了：<a href="http://www.vpser.net/build/linode-install-openvpn.html">VPS侦探 Linode VPS OpenVPN安装配置教程(基于Debian/Ubuntu)</a>    <br/>
1.安装</p>

<pre><code>apt-get install openvpn udev lzop
</code></pre>

<p>2.OpenVPN提供了”easy-rsa”这套加密方面的工具openvpn安装好之后easy-rsa在/usr/share/doc/openvpn/examples/easy-rsa/文件夹中为了使OpenVPN正常工作需要把easy-rsa复制到/etc/openvpn中.运行下列命令:</p>

<pre><code>#cp -R /usr/share/doc/openvpn/examples/easy-rsa/ /etc/openvpn
</code></pre>

<p>在<code>/etc/openvpn/easy-rsa/2.0/</code>中设置，基本所有的OpenVPN配置都在这。 <br/>
生产CA证书： <br/>
<code>
cd /etc/openvpn/easy-rsa/2.0
source vars
./clean-all
./build-ca
</code>
<code>./build-ca</code>时会提示输入一些信息，可以都直接回车按默认信息。 <br/>
3.生成服务器端证书和密钥：</p>

<pre><code>./build-key-server server
</code></pre>

<p>有两次需要输入y。 <br/>
4.生产客户端证书和密钥：</p>

<pre><code>./build-key client
</code></pre>

<p>生成的证书和密钥在<code>/etc/openvpn/easy-rsa/2.0/keys/</code>下面。 <br/>
5.生成Diffie Hellman参数：</p>

<pre><code>./build-dh
</code></pre>

<p>6.安装配置openVPN客户端    详情见参考。</p>

<h2>windows客户端下载</h2>

<p>1.下载OpenVPN：<a href="http://www.openvpn.net/index.php/open-source/downloads.html">http://www.openvpn.net/index.php/open-source/downloads.html</a>下载最新版本安装包。 <br/>
2.安装，建议win7/vista用户安装到非系统分区。
3.修改虚拟网卡DNS，Google DNS :8.8.8.8和 8.8.4.4；OpenDNS的208.67.222.222 和208.67.220.220。 <br/>
4.将keys.tgz解压至openVPN安装目录下的config目录。 <br/>
5.运行openVPN。 <br/>
6.如果没有什么差错的话至此安装成功。 <br/>
可以进<a href="http://www.dnsstuff.com">http://www.dnsstuff.com</a> 或者facebook/twitter等测试下。惊喜等着你哦！ <br/>
如果需要和你的朋友分享这个，可以新建个用户，重新生成客户端证书。 <br/>
<code>
cd /etc/openvpn/easy-rsa/2.0
 ./vars
./build-key user1
</code>
将新生成的user1.crt,user1.key,user1.csr三个文件和*.ovpn和ca.crt、ca.key三个文件一起下载到本地，编辑下载下来的<code>*.ovpn</code>文件将其中的<code>cert client1.crt</code>和<code>key client1.key</code>修改为：<code>cert user1.crt</code>和<code>key user1.key</code>。  <br/>
把以上文件，打包发送给你的朋友。并将其解压到config目录下。</p>

<br />


<p>本文地址：<a href="http://tinyxd.me/blog/2012/08/30/debian-ubuntu-setup-openvpn/">http://tinyxd.me/blog/2012/08/30/debian-ubuntu-setup-openvpn/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用Dropbox备份VPS网站及数据库 ]]></title>
    <link href="http://tinyxd.me/blog/2012/08/27/use-dropbox-backup-vps-and-database/"/>
    <updated>2012-08-27T23:28:00+08:00</updated>
    <id>http://tinyxd.me/blog/2012/08/27/use-dropbox-backup-vps-and-database</id>
    <content type="html"><![CDATA[<p>用SSH客户端（PuTTY）登陆，进入root目录：</p>

<pre><code>cd ~
</code></pre>

<p>linux下用ssh登录：</p>

<pre><code>ssh (ip) -l (用户名) -p (端口号)
或者
ssh username@ip
或者  
ssh username@domain
</code></pre>

<p>下载dropbox程序： <br/>
32位版本：</p>

<pre><code>wget -O dropbox.tar.gz http://www.dropbox.com/download/?plat=lnx.x86
</code></pre>

<p>64位版本：</p>

<pre><code>wget -O - "https://www.dropbox.com/download?plat=lnx.x86_64
</code></pre>

<!--more-->


<p>解压缩：</p>

<pre><code>    tar -zxof dropbox.tar.gz
</code></pre>

<p>然后第一次运行dropbox：</p>

<pre><code>    ~/.dropbox-dist/dropboxd &amp;
</code></pre>

<p>运行后会出现一串URL地址，把这个复制到流量器上，跟你的dropbox账户进行绑定。
绑定好之后就可以开始同步了。 <br/>
首先进入dropbox，</p>

<pre><code>   cd ~/Dropbox
</code></pre>

<p>备份整个wwwroot目录，建立一个软连接：</p>

<pre><code>    ln -s /home/wwwroot
</code></pre>

<p>由于dropbox耗费的内存确实够大，建议不要开太长时间 <br/>
<img src="http://upload.tinyxd.me/2012/08/dropboxload.jpg"  alt="dropboxload" width="778" height="200"> <br/>
如果上面操作没有错误的话，在dropbox就可以看到同步的文件了。 <br/>
附别人写的一个脚本：
``` bash dropboxbak.sh</p>

<pre><code>   #!/bin/sh
    BACKUP_SRC="/root/Dropbox"  #用于同步的本地目录
    BACKUP_WWW="/home/wwwroot"     #你的网站目录
    NOW=$(date +"%Y.%m.%d")
    MYSQL_SERVER="127.0.0.1"
    MYSQL_USER="user"
    MYSQL_PASS="password"
    DAY=$(date +"%u")             #取当前星期，1表示周一
    start() {
   echo starting bak SQL
    #dump数据库数据，以及备份网站整站文件
    mysqldump -u $MYSQL_USER -h $MYSQL_SERVER -p$MYSQL_PASS 需要备份的数据库名称 &gt; "$BACKUP_SRC/$NOW-Databases.sql"
    echo starting dropbox
    /root/.dropbox-dist/dropboxd &amp;
    }
    stop() {
    echo stoping dropbox
    pkill dropbox
    }
    case "$1" in
    start)
    start
    ;;
    stop)
    stop
    ;;
    esac
</code></pre>

<p>```
将脚本放到~/.dropbox下，修改脚本权限：</p>

<pre><code>        chmod 755 ~/.dropbox/dropboxbak.sh
</code></pre>

<p>添加计划任务：</p>

<pre><code>        crontab –e
</code></pre>

<p>添加两条内容：</p>

<pre><code>            0   3 * * * sh /root/.dropbox/dropboxbak.sh start

            30 3 * * * sh /root/.dropbox/dropboxbak.sh stop
</code></pre>

<p>具体参数参照文档。 <br/>
删除dropbox的方法： <br/>
```</p>

<h1>sh /root/.dropbox/dropboxbak.sh stop</h1>

<h1>su - root</h1>

<h1>cd</h1>

<h1>rm -rf .dropbox .dropbox-dist  Dropbox dropbox.tar.gz dbmakefakelib.py dbreadconfig.py</h1>

<p>```</p>

<br />


<p>本文地址：<a href="http://tinyxd.me/blog/2012/08/27/use-dropbox-backup-vps-and-database/">http://tinyxd.me/blog/2012/08/27/use-dropbox-backup-vps-and-database/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[图床管理]]></title>
    <link href="http://tinyxd.me/blog/2012/08/26/imag-file-explorer/"/>
    <updated>2012-08-26T00:08:00+08:00</updated>
    <id>http://tinyxd.me/blog/2012/08/26/imag-file-explorer</id>
    <content type="html"><![CDATA[<p>做网站，尤其是做多个网站的，文件的统一管理，备份是很重要的。本站用<a href="http://encode-explorer.siineiolekala.net/">Encode Explorer</a>来管理本站图片、上传附件等。 <br/>
去Encode Explorer在sourceforge的<a href="http://sourceforge.net/projects/encode-explorer/files/encode-explorer/">项目官网</a>下载程序，其代码不过3k多行。只要将index.php上传到网站根目录，然后把nginx设置好用<a href="http://upload.tinyxd.me/">2级域名</a>指向此根目录，就可以了。    <br/>
其中index.php需要改几个地方：   <br/>
1.<code>$_CONFIG['lang'] = "zh_CN";</code> 支持中文  <br/>
2.<code>$_CONFIG['users'] = array(array('username', 'password', 'admin'));</code>  建立admin用户   <br/>
其中index.php介绍比较详细了。语法格式：array(username, password, status)    status为user可以查看目录但不可以修改，admin能够上传文件和删除文件。   <br/>
3.<code>$_CONFIG['new_dir_mode'] = 0755;</code>     <br/>
<code>$_CONFIG['upload_file_mode'] = 0644;</code> <br/>
修改新建文件夹和上传文件的默认权限。    <br/>
这就是最终完成的，用二级域名（只要将该域名dns解析到vps服务器地址就可以了）<a href="http://upload.tinyxd.me/">http://upload.tinyxd.me/</a>来上传/浏览/删除文件。  <br/>
本文参考了<a href="http://log4d.com/">log4d</a>的<a href="http://log4d.com/2012/05/image-host/">使用独立图床子域名</a>。</p>

<br />


<p>本文地址：<a href="http://tinyxd.me/blog/2012/08/26/imag-file-explorer/">http://tinyxd.me/blog/2012/08/26/imag-file-explorer/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vps lnmp配置优化]]></title>
    <link href="http://tinyxd.me/blog/2012/08/25/vps-optimization/"/>
    <updated>2012-08-25T23:40:00+08:00</updated>
    <id>http://tinyxd.me/blog/2012/08/25/vps-optimization</id>
    <content type="html"><![CDATA[<p>我选用了lnmp（linux + Nginx + PHP + MySQL ）来安装，方便快捷，安装后发现其实好多已经优化好了。  <br/>
其中需要注意到的有以下几个： <br/>
一. 基于xen架构的可以增加swap分区大小
我的vps是openVZ的，swap分区是不能随意更改的。PS.主机商已经提供了128M的swap了。满足了！ <br/>
<code>
cd /var/
dd if=/dev/zero of=swapfile bs=1024 count=262144
/sbin/mkswap swapfile
/sbin/swapon swapfile
</code>
然后让自己做的swap分区在系统启动时自动加载：</p>

<pre><code>vi /etc/fstab   
</code></pre>

<p>在适当位置添加以下内容：</p>

<pre><code>/var/swapfile swap swap defaults 0 0
</code></pre>

<!--more-->


<p>二.Nginx主配置文件（nginx.conf）的优化
Nginx每个进程耗费10M~12M内存，只开启一个Nginx进程，节省内存。</p>

<pre><code>worker_processes 1;   
</code></pre>

<p>对网页文件、CSS、JS、XML等启动gzip压缩，减少数据传输量，提高访问速度。</p>

<pre><code>gzip on;
gzip_min_length  1k;
gzip_buffers     4 16k;
gzip_http_version 1.0;
gzip_comp_level 2;
gzip_types       text/plain application/x-javascript text/css application/xml;
gzip_vary on;
</code></pre>

<p>还有：</p>

<pre><code>location ~ .*\.(php|php5)?$
   {
     #将Nginx与FastCGI的通信方式由TCP改为Unix Socket。TCP在高并发访问下比Unix Socket稳定，但Unix Socket速度要比TCP快。
     fastcgi_pass  unix:/tmp/php-cgi.sock;
     #fastcgi_pass  127.0.0.1:9000;
     fastcgi_index index.php;
     include fcgi.conf;
   }

   location ~ /read.php
   {
     #将Nginx与FastCGI的通信方式由TCP改为Unix Socket。TCP在高并发访问下比Unix Socket稳定，但Unix Socket速度要比TCP快。
     fastcgi_pass  unix:/tmp/php-cgi.sock;
     #fastcgi_pass  127.0.0.1:9000;
     fastcgi_index index.php;
     include fcgi.conf;
   }

   #博客的图片较多，更改较少，将它们在浏览器本地缓存15天，可以提高下次打开我博客的页面加载速度。
   location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
   {
     expires      15d;
   } 

   #博客会加载很多JavaScript、CSS，将它们在浏览器本地缓存1天，访问者在看完一篇文章或一页后，再看另一篇文件或另一页的内容，无需从服务器再次下载相同的JavaScript、CSS，提高了页面显示速度。
   location ~ .*\.(js|css)?$
   {
     expires      1d;
   }   
</code></pre>

<p>其实上面说的lnmp自动安装包已经做好了这些优化！ <br/>
包括后面<a href="http://blog.s135.com/post/375/2/1/">这篇文章</a>提到的，lnmp已经配置好了。</p>

<br />


<p>对于新手的忠告，将配置改好后，记得reload，或者restart。 <br/>
经过优化后的vps，有人做过测试一小时，1000+的pv量都是没有问题的。相同的价格可见买vps还是比较合算的。 <br/>
PS.我的vps现在放了两个站：<a href="http://tinyxd.me/">本站</a>、<a href="http://info.tinyxd.me/">冰之竹语</a>。后期准备再弄个技术bbs之类的玩玩。 <br/>
对了我还放了个文件管理器<a href="http://encode-explorer.siineiolekala.net/">Encode Explorer</a>，专门用来存放上传的图片和文件的。地址在<a href="http://upload.tinyxd.me/">这里</a>。其实这一招是从<a href="http://log4d.com/2012/05/image-host/">这里</a>学来的。。。
我将在我的下一篇<a href="http://tinyxd.me/blog/2012/08/26/imag-file-explorer/">文章</a>中详细说明。</p>

<br />


<p>本文地址：<a href="http://tinyxd.me/blog/2012/08/25/vps-optimization/">http://tinyxd.me/blog/2012/08/25/vps-optimization/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VPS申请及博客搭建]]></title>
    <link href="http://tinyxd.me/blog/2012/08/14/vps-lnmp-setup-and-typecho-blog/"/>
    <updated>2012-08-14T00:33:00+08:00</updated>
    <id>http://tinyxd.me/blog/2012/08/14/vps-lnmp-setup-and-typecho-blog</id>
    <content type="html"><![CDATA[<p>前些天，在网上溜达时，突然看到一款免费的vps。不错。。。免费的。。。哥当时是激动啊，对于像我这样的屌丝，有免费的当然不会放过的。 <br/>
于是乎哥就开始折腾了。 <br/>
一、Vps申请 <br/>
Vps是host1free提供的（128MB,10G,无限流量），申请地址：<a href="http://www.host1free.com/free-vps/">http://www.host1free.com/free-vps/</a> ，看网上说，这已经是第三次开放注册了，一共2万个。最好翻墙注册，注册时最好用Gmail邮箱，不要用qq邮箱，然后就是耐心的等待了。建议大家，真心做正规站的来申请，做采集站的（包括采集类影视、小说、淘客及黑客、成人等违反TOS和中美法律内容）绕道吧。这个免费的vps对于想学习vps搭建博客的人实属不易。 <br/>
二、 安装lnmp</p>

<!--more-->


<p>参考<a href="http://lnmp.org/install.html">LNMP一键安装包</a>，其中会用到putty工具，可以到<a href="http://dl.pconline.com.cn/html_2/1/97/id=3978&amp;pn=0.html">这里</a>下载。 <br/>
按照上面的步骤进行操作。需要说明的是 <br/>
1. 第一条命令<code>screen –S lnmp</code>很重要，当网络突然掉线或者不小心putty被关掉时候，可以用<code>screen –r lnmp</code>看到之前lnmp所进行到的情况。对于没有screen的可以按照<a href="http://www.vpser.net/manage/run-screen-lnmp.html">这里</a>进行安装。 <br/>
2. 当需要将二级域名绑定到此空间时，我所用的博客工具是typecho，当添加了虚拟主机后，进入后台出现404错误，一般出现这样的情况是nginx设置伪静态的问题，这个情况lnmp已经帮我们解决了。但是，我的仍然出现了404问题，最后把<code>/usr/local/nginx/conf/nginx.conf</code>里面的server_name 和所绑定的域名重名了。只要随便改个名字就好了。  <br/>
三、 安装typecho  <br/>
安装过程，<a href="http://docs.typecho.org/install">官方文档</a>已经说的够详细了，这里就不再多说了。 <br/>
四、 数据库的备份问题  <br/>
数据备份，这个始终是个大问题。可以到<a href="http://www.vpser.net/vps-howto">这里</a>参考，也可以使用rsync来同步备份。 <br/>
五、关于新建站点  <br/>
至于这个新建的站点，其实想法还没有成熟，只是想分享一些互联网，linux方面的资讯，还有一些搞笑的轻松的话题。地址是：<a href="http://info.tinyxd.me">http://info.tinyxd.me</a>  <br/>
ps：博客还没有取名，希望大家给点建议。</p>

<br />


<p>关于vps，lnmp比较好的文章：  <br/>
<a href="http://www.cnblogs.com/amityat/archive/2011/08/23/2150177.html">LNMP一键安装升级nginx及php常用设置 SFTP管理指南</a> <br/>
<a href="http://www.vpser.net/vps-howto">VPS新手指南/教程</a></p>

<br />


<p>本站博客未特别注明，均为原创，转载请注明出处。 <br/>
本文地址：<a href="http://tinyxd.me/blog/2012/08/14/vps-lnmp-setup-and-typecho-blog/">http://tinyxd.me/blog/2012/08/14/vps-lnmp-setup-and-typecho-blog/</a></p>
]]></content>
  </entry>
  
</feed>
